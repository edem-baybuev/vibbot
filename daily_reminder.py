import asyncio
from datetime import datetime
import db

last_notified = {}

async def daily_reminder_task(bot):
    while True:
        if db.db_pool is None:
            print("[–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ] –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
            await asyncio.sleep(5)
            continue

        now = datetime.now()
        today = now.date()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞: –∑–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–∏–∫—É —Ç–æ–ª—å–∫–æ –≤ 9 —É—Ç—Ä–∞
        if now.hour == 20:
            try:
                user_ids = await db.get_all_user_ids()
                for user_id in user_ids:
                    event = await db.get_nearest_event(user_id)
                    if not event:
                        continue

                    event_date = event['event_date']
                    days_left = (event_date - today).days
                    last_date = last_notified.get(user_id)

                    if days_left == 0:
                        await bot.send_message(
                            user_id,
                            f"üéâ –°–µ–≥–æ–¥–Ω—è —Å–æ–±—ã—Ç–∏–µ: *{event['event_name']}*!",
                            parse_mode="Markdown"
                        )
                        await db.delete_event(event['id'])
                        last_notified[user_id] = today
                        continue

                    if 0 < days_left <= 3:
                        if last_date != today:
                            await bot.send_message(
                                user_id,
                                f"‚è≥ –î–æ —Å–æ–±—ã—Ç–∏—è *{event['event_name']}* –æ—Å—Ç–∞–ª–æ—Å—å {days_left} –¥–Ω.",
                                parse_mode="Markdown"
                            )
                            last_notified[user_id] = today
                        continue

                    if days_left > 3:
                        if last_date is None or (today - last_date).days >= 7:
                            await bot.send_message(
                                user_id,
                                f"üìÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –±–ª–∏–∂–∞–π—à–µ–µ —Å–æ–±—ã—Ç–∏–µ *{event['event_name']}* —á–µ—Ä–µ–∑ {days_left} –¥–Ω.",
                                parse_mode="Markdown"
                            )
                            last_notified[user_id] = today

            except Exception as e:
                print(f"[–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ] –û—à–∏–±–∫–∞: {e}")

            # –ñ–¥—ë–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è (24 —á–∞—Å–∞), —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–æ–ø–∞—Å—Ç—å –≤ 9:00
            await asyncio.sleep(86400)

        else:
            # –ï—Å–ª–∏ —Å–µ–π—á–∞—Å –Ω–µ 9 —É—Ç—Ä–∞ ‚Äî –ø–æ–¥–æ–∂–¥–∞—Ç—å 60 —Å–µ–∫—É–Ω–¥ –∏ —Å–Ω–æ–≤–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
            await asyncio.sleep(60)
